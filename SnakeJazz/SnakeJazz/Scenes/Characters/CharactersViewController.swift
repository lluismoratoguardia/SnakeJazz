//
//  CharactersViewController.swift
//  SnakeJazz
//
//  Created by Lluís Morató on 6/6/24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CharactersDisplayLogic: AnyObject {
    func displayCharacters(_ characters: [CharactersViewModel.Character], hasNextPage: Bool, hasPreviousPage: Bool)
    func displayPaginationInfo()
}

class CharactersViewController: UIViewController {
    @IBOutlet private weak var tempLabel: UILabel!
    @IBOutlet private weak var previousPageButton: UIButton!
    @IBOutlet private weak var nextPageButton: UIButton!
    
    private var characters = [CharactersViewModel.Character]()
    
    var interactor: CharactersBusinessLogic?
    var router: (NSObjectProtocol & CharactersRoutingLogic & CharactersDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = CharactersInteractor()
        let presenter = CharactersPresenter()
        let router = CharactersRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        interactor?.getCharacters()
    }
    
    // MARK: View Setup
    
    private func setupView() {
        title = String(localized: "characters_title")
        view.backgroundColor = Colors.backgroundColor
    }
    
    // MARK: Actions
    
    @IBAction private func previousPageTouchUp() {
        interactor?.getPreviousCharacters()
    }
    
    @IBAction private func nextPageTouchUp() {
        interactor?.getNextCharacters()
    }
}

extension CharactersViewController: CharactersDisplayLogic {
    func displayCharacters(_ characters: [CharactersViewModel.Character], hasNextPage: Bool, hasPreviousPage: Bool) {
        tempLabel.text = characters.first?.name
        nextPageButton.isEnabled = hasNextPage
        previousPageButton.isEnabled = hasPreviousPage
    }
    
    func displayPaginationInfo() {
        
    }
}
